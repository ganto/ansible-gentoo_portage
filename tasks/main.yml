---

- name: Set ACCEPT_KEYWORDS in make.conf
  ansible.builtin.lineinfile:
    path: /etc/portage/make.conf
    regexp: '^ACCEPT_KEYWORDS='
    line: 'ACCEPT_KEYWORDS="{{ gentoo_portage__accept_keywords }}"'
    state: present
  when: gentoo_portage__accept_keywords | length > 0

- name: Set MAKEOPTS in make.conf
  ansible.builtin.lineinfile:
    path: /etc/portage/make.conf
    regexp: '^MAKEOPTS='
    line: 'MAKEOPTS="{{ gentoo_portage__makeopts }}"'
    state: present
  when: gentoo_portage__makeopts | length > 0

- name: Set custom variables in make.conf
  ansible.builtin.lineinfile:
    path: /etc/portage/make.conf
    regexp: '^{{ item.key }}='
    line: '{{ item.key }}="{{ item.value }}"'
    state: present
  with_dict: '{{ gentoo_portage__makeconf_vars }}'

- name: Include tasks to set profile
  ansible.builtin.include_tasks: profile.yml
  when: gentoo_portage__profile | length > 0

- name: Create portage repos.conf directory
  ansible.builtin.file:
    path: '/etc/portage/repos.conf'
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0755

- name: Gentoo portage repository configuration
  ansible.builtin.template:
    src: 'repos.conf-gentoo.conf.j2'
    dest: '/etc/portage/repos.conf/gentoo.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
  register: gentoo_portage__register_repo_config

- name: Global USE flags configuration
  ansible.builtin.lineinfile:
    path: '/etc/portage/make.conf'
    regexp: '^USE='
    line: |
      USE="{{ (gentoo_portage__global_use_enable | sort | join(' ')) + ' '
              if (gentoo_portage__global_use_enable | length > 0)
              else '' }}{{
              ('-' + gentoo_portage__global_use_disable | sort | join (' -'))
              if (gentoo_portage__global_use_disable | length > 0)
              else '' }}"
  when: (gentoo_portage__global_use_enable | symmetric_difference(gentoo_portage__global_use_disable)) | length > 0

- name: Check if equery is available
  ansible.builtin.command: which equery
  check_mode: no
  changed_when: False
  failed_when: False
  register: gentoo_portage__register_equery

- name: Install gentoolkit for equery support
  ansible.builtin.command: emerge --quiet-build=y gentoolkit
  when: gentoo_portage__register_equery.rc != 0

- name: Synchronize portage repository
  community.general.portage:
    sync: yes
  # equery required by the portage module might not be available yet
  ignore_errors: "{{ ansible_check_mode }}"
  when: ((gentoo_portage__register_repo_config is changed) and
         (gentoo_portage__sync | bool)) or
        (gentoo_portage__sync_force | bool)

- name: Install packages
  ansible.builtin.package:
    name: '{{ gentoo_portage__packages_default | union(gentoo_portage__packages) }}'
    state: present
    quietbuild: yes
  # equery required by the portage module might not be available yet
  ignore_errors: "{{ ansible_check_mode }}"
  register: gentoo_portage__register_pkg_install

- name: Include tasks to setup eix database
  ansible.builtin.include_tasks: setup_eix.yml
  when:
    - gentoo_portage__register_pkg_install is changed
    - ('eix' in (gentoo_portage__packages_default | union(gentoo_portage__packages)))

- name: Cleanup package sources after installation
  ansible.builtin.command: eclean-dist
  when:
    - gentoo_portage__register_pkg_install is changed
    - gentoo_portage__packages_clean_sources | bool
